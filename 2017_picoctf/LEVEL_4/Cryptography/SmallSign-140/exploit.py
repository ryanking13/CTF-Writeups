from pwn import *
import sys
import struct
import time

primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97,
         101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193,
         197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293,
         ]

def primefac(num):
    l = []

    n = num
    for fac in primes:
        while n % fac == 0:
            l.append(fac)
            n /= fac

    if n != 1:
        return None

    return l

while True:
    signatures = []
    p = remote('shell2017.picoctf.com', 10650)

    s = time.time()

    p.recvuntil('N: ')
    N = int(p.recvline().strip())
    print('N:', N)

    for i in range(len(primes)):
        p.sendline(str(primes[i]))
        p.recvuntil('Signature: ')
        signatures.append(int(p.recvline().strip()))

    p.sendline('-1')
    p.recvuntil('Challenge: ')
    challenge = int(p.recvline().strip())
    print('challenge:', challenge)

    fac = primefac(challenge)

    e = time.time()

    print('time:', e-s)
    if not fac:
        p.close()
        continue

    print('primefac:', fac)

    ans = 1

    for num in fac:
        ans = (ans * signatures[primes.index(num)]) % N

    print('ans', ans)
    p.sendline(str(ans))
    p.interactive()