#!/usr/bin/env python
from flask.sessions import SecureCookieSessionInterface
from itsdangerous import URLSafeTimedSerializer

class SimpleSecureCookieSessionInterface(SecureCookieSessionInterface):
    # Override method
    # Take secret_key instead of an instance of a Flask app
    def get_signing_serializer(self, secret_key):
        if not secret_key:
            return None
        signer_kwargs = dict(
            key_derivation=self.key_derivation,
            digest_method=self.digest_method
        )
        return URLSafeTimedSerializer(secret_key, salt=self.salt,
                                      serializer=self.serializer,
                                      signer_kwargs=signer_kwargs)

def decodeFlaskCookie(secret_key, cookieValue):
    sscsi = SimpleSecureCookieSessionInterface()
    signingSerializer = sscsi.get_signing_serializer(secret_key)
    return signingSerializer.loads(cookieValue)

# Keep in mind that flask uses unicode strings for the
# dictionary keys
def encodeFlaskCookie(secret_key, cookieDict):
    sscsi = SimpleSecureCookieSessionInterface()
    signingSerializer = sscsi.get_signing_serializer(secret_key)
    return signingSerializer.dumps(cookieDict)

if __name__=='__main__':
    sk = '73e1f2c96e364f0cc3371c31927ed156'

    cookie = '.eJwlj0GKAzEMBP_icw6WZclSPjPIssSGwC7MJKeQv2fCHvpSUFD9KlvucfyU62N_xqVst1WupdVEGpAJNBZDE56wzimrCUsVaI0xe1v4hcObtEZ1OKp75yRVZOydJgtS2HCopqFddRpSQgcbKAQ5WyIMEJI0M-2R7jPLpfix5_b4u8fv2VMpMYmcLQjFUHQt5kWUo2OELagKPOfpPY_Y_0-AlvcHuq49yQ.DpJHxA.Sc3OH19Ce_MobipN3WM0uQnRm_Y'
    decodedDict = decodeFlaskCookie(sk, cookie)

    decodedDict[u'user_id'] = u'1'
    print(decodedDict)

    cookie = encodeFlaskCookie(sk, decodedDict)
    print(cookie)